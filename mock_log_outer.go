// Automatically generated by MockGen. DO NOT EDIT!
// Source: log_outer.go

package golog

import (
	gomock "gomock.googlecode.com/hg/gomock"
)

// Mock of LogOuter interface
type MockLogOuter struct {
	ctrl     *gomock.Controller
	recorder *_MockLogOuterRecorder
}

// Recorder for MockLogOuter (not exported)
type _MockLogOuterRecorder struct {
	mock *MockLogOuter
}

func NewMockLogOuter(ctrl *gomock.Controller) *MockLogOuter {
	mock := &MockLogOuter{ctrl: ctrl}
	mock.recorder = &_MockLogOuterRecorder{mock}
	return mock
}

func (m *MockLogOuter) EXPECT() *_MockLogOuterRecorder {
	return m.recorder
}

func (m *MockLogOuter) Output(_param0 *LogMessage) {
	m.ctrl.Call(m, "Output", _param0)
}

func (mr *_MockLogOuterRecorder) Output(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCall(mr.mock, "Output", arg0)
}
// Mock of TestController interface
type MockTestController struct {
	ctrl     *gomock.Controller
	recorder *_MockTestControllerRecorder
}

// Recorder for MockTestController (not exported)
type _MockTestControllerRecorder struct {
	mock *MockTestController
}

func NewMockTestController(ctrl *gomock.Controller) *MockTestController {
	mock := &MockTestController{ctrl: ctrl}
	mock.recorder = &_MockTestControllerRecorder{mock}
	return mock
}

func (m *MockTestController) EXPECT() *_MockTestControllerRecorder {
	return m.recorder
}

func (m *MockTestController) Log(_param0 ...interface{}) {
	m.ctrl.Call(m, "Log", _param0)
}

func (mr *_MockTestControllerRecorder) Log(arg0 ...interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCall(mr.mock, "Log", arg0)
}

func (m *MockTestController) FailNow() {
	m.ctrl.Call(m, "FailNow")
}

func (mr *_MockTestControllerRecorder) FailNow() *gomock.Call {
	return mr.mock.ctrl.RecordCall(mr.mock, "FailNow")
}
